name: Custom pipeline

on: [push, pull_request]

jobs:
  python_unit_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  

      - name: Run unit tests and generate text report
        run: |
          python -m unittest discover -s ./ -p 'test_app.py' 2>&1 | tee TestReport.txt

      - name: Archive test report
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: TestReport.txt  

  Linux-self-hosted:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  

      - name: Run unit tests and generate text report
        run: |
          python -m unittest discover -s ./ -p 'test_app.py' 2>&1 | tee TestReportA.txt

      - name: Archive test report
        uses: actions/upload-artifact@v2
        with:
          name: TestReportA
          path: TestReportA.txt  

  Windows-self-hosted:
    runs-on: Windows  

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  

      - name: Run unit tests and generate text report
        run: |
         python -m unittest discover -s ./ -p 'test_app.py' 2>&1 

      - name: Archive test report
        uses: actions/upload-artifact@v2
        with:
          name: TestReportB
          path: TestReportB.txt  


  DockerContainers:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Publish Docker image
        run: |
          #docker build -t docker.pkg.github.com/insightiq/ica2/ica2_image:v1 .
          #echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login docker.pkg.github.com -u insightiq --password-stdin
          #docker push docker.pkg.github.com/insightiq/ica2/ica2_image:v1
        env:
          USERNAME: ${{ github.repository_owner }}
          REPOSITORY: ${{ github.event.repository.name }}
          IMAGE_NAME: ica2_image
          TAG: v1

